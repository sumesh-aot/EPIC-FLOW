name: Reports API CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (dev)"
        required: true
        default: "dev"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TAG: sha-${{ github.sha }}
  APP_NAME: eao-project-reports-api

jobs:
  sonar-scan:
    if: github.event_name == 'push' && github.repository == 'bcgov/EPIC-FLOW'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build-and-push-image-to-ghcr:
    needs: sonar-scan
    if: github.event_name == 'push' && github.repository == 'bcgov/eao-project-reports'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: ghcr.io/bcgov/eao-project-reports
            context: ./reports-api
            dockerfile: Dockerfile
            name: app
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ matrix.image }}
          tags: latest

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          file: ${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy-to-dev:
    if: github.event_name == 'push' && github.repository == 'bcgov/eao-project-reports'
    needs: [ build-and-push-image-to-ghcr ]
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login Openshift
        shell: bash
        run: |
          oc login --server=${{secrets.OPENSHIFT4_LOGIN_REGISTRY}} --token=${{secrets.OPENSHIFT4_SA_TOKEN}} --insecure-skip-tls-verify
      - name: Watch new rollout (trigger by image change in Openshift)
        shell: bash
        run: |
          oc rollout latest dc/${{ env.APP_NAME }}-dev -n ${{ secrets.OPENSHIFT4_DEV_REPO }}
